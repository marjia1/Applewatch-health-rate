# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LkMEQ6oE2wfIInB8O1SJrLmsRURdDVz4
"""

import pandas as pd
import numpy as np
data = pd.read_csv('AppleWatch.csv')
print(data.shape)
print(data.head())

data['Calories'] = np.where(data['Calories'].between(0.7,1), 1, data['Calories'])

data['Calories'].astype(int)

data["Steps"].mul(100)

data['Distance'] = np.where(data['Distance'].between(0,1000), 1, data['Distance'])
print(data['Distance'].head())
data['Distance'].astype(int)

data["Age"].min()
data["Age"].max()

data['Age'] = np.where(data['Age'].between(21,25), 1, data['Age'])
data['Age'] = np.where(data['Age'].between(26,30), 2, data['Age'])

data['Age'] = np.where(data['Age'].between(31,35), 3, data['Age'])

data['Age'] = np.where(data['Age'].between(36,40), 4, data['Age'])

data['Age'] = np.where(data['Age'].between(41,44), 5, data['Age'])
print(data['Age'].head())
data['Age'].astype(int)

data['Gender'].replace(to_replace ="M",  value ="2", inplace = True) 
data['Gender'].replace(to_replace ="F",  value ="1", inplace = True) 

print(data['Gender'].head())
data['Gender'].astype(int)

data["Weight"].min()
data["Weight"].max()

data['Weight'] = np.where(data['Weight'].between(110,150), 1, data['Weight'])
data['Weight'] = np.where(data['Weight'].between(151,200), 2, data['Weight'])
data['Weight'] = np.where(data['Weight'].between(201,250), 3, data['Weight'])

data['Weight'].astype(int)6

data['Height'] = np.where(data['Height'].between(5.1,5.5), 1, data['Height'])
data['Height'] = np.where(data['Height'].between(5.6,6), 2, data['Height'])
data['Height'] = np.where(data['Height'].between(6.1,6.7), 3, data['Height'])


data['Height'].astype(int)

data['Activity'].replace(to_replace ="0.Sleep",  value ="0", inplace = True)
data['Activity'].replace(to_replace ="1.Sedentary",  value ="1", inplace = True)
data['Activity'].replace(to_replace ="2.Light",  value ="2", inplace = True)
data['Activity'].replace(to_replace ="3.Moderate",  value ="3", inplace = True)
data['Activity'].replace(to_replace ="4.Vigorous",  value ="4", inplace = True)

data['Activity'].astype(int)

data['Heart'] = np.where(data['Heart'].between(0,119), 1, data['Heart'])
data['Heart'] = np.where(data['Heart'].between(120,200), 2, data['Heart'])

print(data['Heart'].head())

data['Heart'].astype(int)

X = data.drop('Heart',axis=1)
Y = data['Heart']



from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_test = train_test_split(X,Y,test_size = 0.20)

from sklearn.preprocessing import StandardScaler

sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

from sklearn.ensemble import RandomForestRegressor

regressor = RandomForestRegressor(n_estimators=20, random_state=0)
regressor.fit(X_train, y_train)
y_pred = regressor.predict(X_test)

from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

print(confusion_matrix(y_test,y_pred))
print(classification_report(y_test,y_pred))
print(accuracy_score(y_test, y_pred))

